// http://mrl.nyu.edu/~perlin/noise/

var ImprovedNoise = function () {

	var p = [ 151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,
		 23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,
		 174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,
		 133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,
		 89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,
		 202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,
		 248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,
		 178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,
		 14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,
		 93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180 ];
	// var p = [100,56,198,87,201,246,146,2,143,80,124,10,3,179,19,138,54,238,244,125,36,7,157,251,187,13,32,182,217,195,105,164
	// 		,93,4,47,153,156,80,194,124,247,50,8,103,57,213,38,27,142,16,17,110,149,79,45,109,180,193,129,197,20,46,161,221
	// 		,104,102,37,122,75,65,155,70,216,23,159,98,52,223,185,110,233,211,226,172,35,179,127,129,36,161,220,105,174,15,183,237
	// 		,127,147,57,227,241,205,246,53,87,189,217,23,95,94,157,143,101,1,231,145,116,199,234,134,83,115,144,65,216,74,4,235
	// 		,68,208,4,9,6,45,126,2,146,58,217,7,165,119,192,198,20,220,229,95,34,94,97,86,227,47,111,175,195,26,252,161
	// 		,18,197,50,14,185,200,78,45,254,49,215,177,71,101,11,64,89,92,115,157,220,113,17,164,105,75,132,2,54,243,136,27
	// 		,98,82,36,201,194,166,205,89,16,134,144,137,28,131,164,199,3,14,116,13,123,101,102,140,61,183,76,214,145,149,63,208
	// 		,116,22,72,108,102,161,130,110,183,181,3,152,229,253,151,132,171,58,128,149,150,49,127,156,243,167,41,4,64,118,228,250,
	// 		];

	for (var i = 0; i < 256 ; i ++) {
		p[256 + i] = p[i];
	}

	function fade(t) {
		return t * t * t * (t * (t * 6 - 15) + 10);
	}

	function lerp(t, a, b) {
		return a + t * (b - a);
	}

	function grad(hash, x, y, z) {
		var h = hash & 15;
		var u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;
		return ((h&1) == 0 ? u : -u) + ((h&2) == 0 ? v : -v);
	}

	return {

		noise: function (x, y, z) {

			var floorX = ~~x, floorY = ~~y, floorZ = ~~z;
			var X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;

			x -= floorX;
			y -= floorY;
			z -= floorZ;

			var xMinus1 = x - 1, yMinus1 = y - 1, zMinus1 = z - 1;
			var u = fade(x), v = fade(y), w = fade(z);
			var A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z, B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;

			return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z), 
				grad(p[BA], xMinus1, y, z)),
				lerp(u, grad(p[AB], x, yMinus1, z),
				grad(p[BB], xMinus1, yMinus1, z))),
				lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),
				grad(p[BA + 1], xMinus1, y, z - 1)),
				lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),
				grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));

		}
	}
};
